name: 🚀 Simple Project Generator

on:
  workflow_dispatch:
    inputs:
      template:
        description: 'Select Project Template'
        required: true
        default: 'aws-cdk-python'
        type: choice
        options:
          - aws-cdk-python
          - aws-cdk-typescript
          - terraform-aws
          - terraform-azure
          - python-fastapi
          - next-js
      project_name:
        description: 'Project Name (e.g., my-awesome-project)'
        required: true
        type: string
      project_description:
        description: 'Project Description'
        required: false
        default: 'Generated using CloudyCS Repository Manager'
        type: string
      author_name:
        description: 'Author Name'
        required: false
        default: 'Your Name'
        type: string

jobs:
  generate-project:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🎯 Validate Template
      run: |
        echo "Validating template: ${{ github.event.inputs.template }}"
        node bin/repo-manager.js validate templates/${{ github.event.inputs.template }}
        
    - name: 🏗️ Generate Project
      run: |
        echo "Generating project: ${{ github.event.inputs.project_name }}"
        echo "Using template: ${{ github.event.inputs.template }}"
        
        mkdir -p output
        node bin/repo-manager.js create \
          --template ${{ github.event.inputs.template }} \
          --name ${{ github.event.inputs.project_name }} \
          --directory ./output \
          --no-git \
          --no-install
          
    - name: 📋 Create Project Summary
      run: |
        cd output/${{ github.event.inputs.project_name }}
        
        cat > GENERATION_INFO.md << 'EOF'
        # 🚀 ${{ github.event.inputs.project_name }}
        
        **Template:** ${{ github.event.inputs.template }}
        **Generated:** $(date)
        **Author:** ${{ github.event.inputs.author_name }}
        **Description:** ${{ github.event.inputs.project_description }}
        
        ## 📁 Generated Files
        ```
        $(find . -type f | sort)
        ```
        
        ## 🚀 Quick Start
        
        Based on your template selection, follow these steps:
        
        ### For AWS CDK Projects
        ```bash
        # Python CDK
        pip install -r requirements.txt
        cdk bootstrap
        cdk deploy
        
        # TypeScript CDK  
        npm install
        npm run build
        cdk bootstrap
        cdk deploy
        ```
        
        ### For Terraform Projects
        ```bash
        terraform init
        terraform plan
        terraform apply
        ```
        
        ### For FastAPI Projects
        ```bash
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt
        uvicorn app.main:app --reload
        ```
        
        ### For Next.js Projects
        ```bash
        npm install
        npm run dev
        ```
        
        ---
        *Generated by CloudyCS Repository Manager*
        EOF
        
    - name: 📤 Upload Generated Project
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.project_name }}-${{ github.event.inputs.template }}
        path: output/${{ github.event.inputs.project_name }}
        retention-days: 30
        
    - name: 🎉 Success Summary
      run: |
        echo "## 🎉 Project Generated Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Project Name:** ${{ github.event.inputs.project_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Template:** ${{ github.event.inputs.template }}" >> $GITHUB_STEP_SUMMARY
        echo "**Files Generated:** $(find output/${{ github.event.inputs.project_name }} -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 How to Download" >> $GITHUB_STEP_SUMMARY
        echo "1. Go to the **Actions** tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Click on this workflow run" >> $GITHUB_STEP_SUMMARY
        echo "3. Scroll down to **Artifacts**" >> $GITHUB_STEP_SUMMARY
        echo "4. Download: \`${{ github.event.inputs.project_name }}-${{ github.event.inputs.template }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Extract the downloaded ZIP file" >> $GITHUB_STEP_SUMMARY
        echo "2. Follow instructions in \`GENERATION_INFO.md\`" >> $GITHUB_STEP_SUMMARY
        echo "3. Start building your project!" >> $GITHUB_STEP_SUMMARY
