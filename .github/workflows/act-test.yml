name: 🧪 Act-Compatible Local Test

on:
  workflow_dispatch:
    inputs:
      template:
        description: 'Select Project Template'
        required: true
        default: 'terraform-aws'
        type: choice
        options:
          - terraform-aws
          - aws-cdk-python
          - python-fastapi
          - next-js
      project_name:
        description: 'Project Name'
        required: true
        default: 'test-project'
        type: string

jobs:
  test-generation:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Verify Files Available
      run: |
        echo "=== Environment Check ==="
        pwd
        echo "Available files:"
        ls -la
        echo ""
        echo "Checking for key files:"
        [ -f "package.json" ] && echo "✅ package.json found" || echo "❌ package.json missing"
        [ -f "package-lock.json" ] && echo "✅ package-lock.json found" || echo "❌ package-lock.json missing"
        [ -d "src" ] && echo "✅ src/ directory found" || echo "❌ src/ directory missing"
        [ -d "templates" ] && echo "✅ templates/ directory found" || echo "❌ templates/ directory missing"
        [ -f "bin/repo-manager.js" ] && echo "✅ CLI binary found" || echo "❌ CLI binary missing"
        
    - name: 🔧 Check Node.js Environment
      run: |
        echo "Node.js version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Working directory: $(pwd)"
        
    - name: 📦 Install Dependencies (Fallback)
      run: |
        echo "Attempting to install dependencies..."
        if [ -f "package-lock.json" ]; then
          echo "Using npm ci..."
          npm ci
        else
          echo "package-lock.json not found, using npm install..."
          npm install
        fi
        
    - name: 🎯 Validate Template
      run: |
        echo "🔍 Validating template: ${{ github.event.inputs.template }}"
        node bin/repo-manager.js validate templates/${{ github.event.inputs.template }}
        
    - name: 🏗️ Generate Project
      run: |
        echo "🚀 Generating project: ${{ github.event.inputs.project_name }}"
        echo "Using template: ${{ github.event.inputs.template }}"
        
        mkdir -p output
        node bin/repo-manager.js create \
          --template ${{ github.event.inputs.template }} \
          --name ${{ github.event.inputs.project_name }} \
          --directory ./output \
          --no-git \
          --no-install
          
    - name: 📋 Show Results
      run: |
        echo "✅ Project generated successfully!"
        echo "Generated files:"
        find output -type f | head -20
